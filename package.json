{
  "name": "superdesign",
  "displayName": "superdesign",
  "description": "The 1st Design Agent lives inside your IDE",
  "version": "0.0.11",
  "publisher": "iganbold",
  "icon": "icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/superdesigndev/superdesign"
  },
  "engines": {
    "vscode": "^1.90.0"
  },
  "categories": [
    "AI",
    "Other"
  ],
  "keywords": [
    "design",
    "ui",
    "mockup",
    "wireframe",
    "component",
    "ai",
    "agent",
    "figma",
    "prototype",
    "layout",
    "frontend",
    "react",
    "html",
    "css",
    "claude",
    "anthropic",
    "generator",
    "automation"
  ],
  "activationEvents": [
    "onCommand:superdesign.helloWorld",
    "onView:superdesign.chatView"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "superdesign.helloWorld",
        "title": "Hello World",
        "category": "Superdesign"
      },
      {
        "command": "superdesign.configureApiKey",
        "title": "Configure Anthropic API Key",
        "category": "Superdesign"
      },
      {
        "command": "superdesign.configureOpenAIApiKey",
        "title": "Configure OpenAI API Key",
        "category": "Superdesign"
      },
      {
        "command": "superdesign.configureOpenAIUrl",
        "title": "Configure OpenAI url",
        "category": "Superdesign"
      },
      {
        "command": "superdesign.configureOpenRouterApiKey",
        "title": "Configure OpenRouter API Key",
        "category": "Superdesign"
      },
      {
        "command": "superdesign.configureModelScopeApiKey",
        "title": "Configure ModelScope API Key",
        "category": "Superdesign"
      },
      {
        "command": "superdesign.configureDeepSeekApiKey",
        "title": "Configure DeepSeek API Key",
        "category": "Superdesign"
      },
      {
        "command": "superdesign.configureKimiApiKey",
        "title": "Configure Kimi API Key",
        "category": "Superdesign"
      },
      {
        "command": "superdesign.configureGLMApiKey",
        "title": "Configure GLM API Key",
        "category": "Superdesign"
      },
      {
        "command": "superdesign.showChatSidebar",
        "title": "Show Chat Sidebar",
        "category": "Superdesign"
      },
      {
        "command": "superdesign.openCanvas",
        "title": "Open Canvas View",
        "category": "Superdesign",
        "icon": "$(window)"
      },
      {
        "command": "superdesign.clearChat",
        "title": "Clear Chat",
        "category": "Superdesign",
        "icon": "$(clear-all)"
      },
      {
        "command": "superdesign.resetWelcome",
        "title": "Reset Welcome Screen",
        "category": "Superdesign"
      },
      {
        "command": "superdesign.initializeProject",
        "title": "Initialize Superdesign",
        "category": "Superdesign"
      },
      {
        "command": "superdesign.openSettings",
        "title": "Open Settings",
        "category": "Superdesign",
        "icon": "$(settings-gear)"
      },
      {
        "command": "superdesign.switchModel",
        "title": "Switch AI Model",
        "category": "Superdesign",
        "icon": "$(code)"
      },
      {
        "command": "superdesign.showModelInfo",
        "title": "Show Model Information",
        "category": "Superdesign",
        "icon": "$(info)"
      },
      {
        "command": "superdesign.configureQwenApiKey",
        "title": "Configure Qwen API Key",
        "category": "Superdesign"
      },
      {
        "command": "superdesign.configureDoubaoApiKey",
        "title": "Configure Doubao API Key",
        "category": "Superdesign"
      },
      {
        "command": "superdesign.exportConfigs",
        "title": "Export Model Configurations",
        "category": "Superdesign"
      },
      {
        "command": "superdesign.importConfigs",
        "title": "Import Model Configurations",
        "category": "Superdesign"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "superdesign.openCanvas",
          "when": "view == superdesign.chatView",
          "group": "navigation"
        },
        {
          "command": "superdesign.openSettings",
          "when": "view == superdesign.chatView",
          "group": "navigation"
        },
        {
          "command": "superdesign.clearChat",
          "when": "view == superdesign.chatView",
          "group": "navigation"
        }
      ]
    },
    "views": {
      "superdesign-sidebar": [
        {
          "type": "webview",
          "id": "superdesign.chatView",
          "name": "SUPER DESIGN",
          "when": "true"
        },
        {
          "type": "webview",
          "id": "superdesign.settingsView",
          "name": "设置",
          "when": "false"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "superdesign-sidebar",
          "title": "Superdesign",
          "icon": "icon.svg"
        }
      ]
    },
    "webviewViewProviders": [
      {
        "id": "superdesign.chatView",
        "name": "SUPER DESIGN",
        "when": "true"
      },
      {
        "id": "superdesign.settingsView",
        "name": "设置",
        "when": "false"
      }
    ],
    "configuration": {
      "title": "Superdesign",
      "properties": {
        "superdesign.activeProvider": {
          "type": "string",
          "enum": [
            "claude-api",
            "claude-code",
            "modelscope",
            "deepseek",
            "moonshot",
            "doubao",
            "qwen",
            "glm",
            "openai",
            "openrouter"
          ],
          "enumDescriptions": [
            "Use Anthropic API key to communicate with Claude via SDK",
            "Use local claude binary for enhanced code execution capabilities",
            "Use ModelScope (魔搭社区) API for Chinese AI models",
            "Use DeepSeek API for advanced reasoning capabilities",
            "Use Moonshot (Kimi) API for long context understanding",
            "Use Doubao API for ByteDance's AI models",
            "Use Qwen API for Alibaba's large language models",
            "Use GLM (智谱AI) API for Chinese language optimization",
            "Use OpenAI API for GPT models",
            "Use OpenRouter API for multiple model access"
          ],
          "default": "claude-api",
          "description": "Current active AI provider for model interactions",
          "scope": "application"
        },
        "superdesign.customModelId": {
          "type": "string",
          "description": "Custom model ID to override provider default (e.g., gpt-4o, claude-3-5-sonnet-20241022)",
          "scope": "application"
        },
        "superdesign.enableModelSwitching": {
          "type": "boolean",
          "default": true,
          "description": "Enable runtime model switching between providers",
          "scope": "application"
        },
        "superdesign.showModelInfo": {
          "type": "boolean",
          "default": true,
          "description": "Show detailed model information in chat interface",
          "scope": "application"
        },
        "superdesign.anthropicApiKey": {
          "type": "string",
          "description": "Anthropic API key for Claude Code integration (required for claude-api provider)",
          "scope": "application"
        },
        "superdesign.claudeCodePath": {
          "type": "string",
          "description": "Path to claude binary (defaults to 'claude' for npm install, use 'claude-code' if installed via shell script)",
          "scope": "application"
        },
        "superdesign.claudeCodeModelId": {
          "type": "string",
          "enum": [
            "claude-sonnet-4-20250514",
            "claude-3-5-sonnet-20241022",
            "claude-3-5-haiku-20241022",
            "claude-3-opus-20240229"
          ],
          "default": "claude-sonnet-4-20250514",
          "description": "Model ID to use with claude binary",
          "scope": "application"
        },
        "superdesign.claudeCodeThinkingBudget": {
          "type": "number",
          "default": 50000,
          "description": "Thinking budget tokens for claude-code provider",
          "scope": "application"
        },
        "superdesign.openaiApiKey": {
          "type": "string",
          "description": "OpenAI API key for custom agent",
          "scope": "application"
        },
        "superdesign.openaiUrl": {
          "type": "string",
          "description": "OpenAI url for custom agent",
          "scope": "application"
        },
        "superdesign.openrouterApiKey": {
          "type": "string",
          "description": "OpenRouter API key for custom agent",
          "scope": "application"
        },
        "superdesign.aiModelProvider": {
          "type": "string",
          "enum": [
            "openai",
            "anthropic",
            "openrouter",
            "claude-code"
          ],
          "default": "anthropic",
          "description": "AI model provider for custom agent (OpenAI, Anthropic, OpenRouter, or Claude Code - Note: Claude Code should be used via the main LLM Provider setting instead)",
          "scope": "application"
        },
        "superdesign.aiModel": {
          "type": "string",
          "description": "Specific AI model to use (e.g., gpt-4o, claude-3-5-sonnet-20241022)",
          "scope": "application"
        },
        "superdesign.modelScopeApiKey": {
          "type": "string",
          "description": "ModelScope (魔搭社区) API key for Chinese AI models",
          "scope": "application"
        },
        "superdesign.modelScopeModelId": {
          "type": "string",
          "enum": [
            "qwen-turbo",
            "qwen-plus",
            "qwen-max",
            "qwen-vl-plus",
            "qwen-vl-max"
          ],
          "default": "qwen-turbo",
          "description": "ModelScope model ID to use",
          "scope": "application"
        },
        "superdesign.deepSeekApiKey": {
          "type": "string",
          "description": "DeepSeek API key for advanced reasoning models",
          "scope": "application"
        },
        "superdesign.deepSeekBaseUrl": {
          "type": "string",
          "default": "https://api.deepseek.com",
          "description": "DeepSeek API base URL",
          "scope": "application"
        },
        "superdesign.deepSeekModelId": {
          "type": "string",
          "enum": [
            "deepseek-chat",
            "deepseek-reasoner"
          ],
          "default": "deepseek-chat",
          "description": "DeepSeek model ID to use"
        },
        "superdesign.deepSeekMaxTokens": {
          "type": "number",
          "default": 8192,
          "description": "Maximum tokens for DeepSeek model responses",
          "scope": "application"
        },
        "superdesign.deepSeekTemperature": {
          "type": "number",
          "default": 0.6,
          "description": "Temperature for DeepSeek model responses (0.0-2.0)",
          "scope": "application"
        },
        "superdesign.moonshotApiKey": {
          "type": "string",
          "description": "Moonshot (Kimi) API key for long context models",
          "scope": "application"
        },
        "superdesign.moonshotBaseUrl": {
          "type": "string",
          "default": "https://api.moonshot.ai/v1",
          "description": "Moonshot API base URL",
          "scope": "application"
        },
        "superdesign.moonshotModelId": {
          "type": "string",
          "enum": [
            "kimi-k2-0905-preview",
            "kimi-k2-0711-preview",
            "kimi-k2-turbo-preview"
          ],
          "default": "kimi-k2-0905-preview",
          "description": "Moonshot model ID to use"
        },
        "superdesign.moonshotMaxTokens": {
          "type": "number",
          "default": 16384,
          "description": "Maximum tokens for Moonshot model responses",
          "scope": "application"
        },
        "superdesign.moonshotTemperature": {
          "type": "number",
          "default": 0.6,
          "description": "Temperature for Moonshot model responses (0.0-2.0)",
          "scope": "application"
        },
        "superdesign.doubaoApiKey": {
          "type": "string",
          "description": "Doubao (ByteDance) API key for AI models",
          "scope": "application"
        },
        "superdesign.doubaoBaseUrl": {
          "type": "string",
          "default": "https://ark.cn-beijing.volces.com/api/v3",
          "description": "Doubao API base URL",
          "scope": "application"
        },
        "superdesign.doubaoModelId": {
          "type": "string",
          "enum": [
            "doubao-lite-4k",
            "doubao-lite-32k",
            "doubao-lite-128k",
            "doubao-pro-4k",
            "doubao-pro-32k",
            "doubao-pro-128k",
            "doubao-vision-pro"
          ],
          "default": "doubao-lite-4k",
          "description": "Doubao model ID to use",
          "scope": "application"
        },
        "superdesign.doubaoMaxTokens": {
          "type": "number",
          "default": 32768,
          "description": "Maximum tokens for Doubao model responses",
          "scope": "application"
        },
        "superdesign.doubaoTemperature": {
          "type": "number",
          "default": 0.7,
          "description": "Temperature for Doubao model responses (0.0-2.0)",
          "scope": "application"
        },
        "superdesign.kimiApiKey": {
          "type": "string",
          "description": "Kimi (Moonshot AI) API key for long context understanding",
          "scope": "application"
        },
        "superdesign.kimiModelId": {
          "type": "string",
          "enum": [
            "moonshot-v1-8k",
            "moonshot-v1-32k",
            "moonshot-v1-128k"
          ],
          "default": "moonshot-v1-8k",
          "description": "Kimi model ID to use",
          "scope": "application"
        },
        "superdesign.qwenApiKey": {
          "type": "string",
          "description": "Qwen (Alibaba) API key for large language models",
          "scope": "application"
        },
        "superdesign.qwenBaseUrl": {
          "type": "string",
          "default": "https://dashscope.aliyuncs.com/api/v1",
          "description": "Qwen API base URL",
          "scope": "application"
        },
        "superdesign.qwenModelId": {
          "type": "string",
          "enum": [
            "qwen-turbo",
            "qwen-plus",
            "qwen-max",
            "qwen-long",
            "qwen-vl-plus",
            "qwen-vl-max",
            "qwen-coder-turbo",
            "qwen-coder-plus"
          ],
          "default": "qwen-plus",
          "description": "Qwen model ID to use",
          "scope": "application"
        },
        "superdesign.qwenMaxTokens": {
          "type": "number",
          "default": 8192,
          "description": "Maximum tokens for Qwen model responses",
          "scope": "application"
        },
        "superdesign.qwenTemperature": {
          "type": "number",
          "default": 0.7,
          "description": "Temperature for Qwen model responses (0.0-2.0)",
          "scope": "application"
        },
        "superdesign.glmApiKey": {
          "type": "string",
          "description": "GLM (智谱AI) API key for Chinese language optimization",
          "scope": "application"
        },
        "superdesign.glmBaseUrl": {
          "type": "string",
          "default": "https://open.bigmodel.cn/api/paas/v4",
          "description": "GLM API base URL",
          "scope": "application"
        },
        "superdesign.glmModelId": {
          "type": "string",
          "enum": [
            "glm-4-plus",
            "glm-4-0520",
            "glm-4-long",
            "glm-4-flash",
            "glm-4-air",
            "glm-4-voice"
          ],
          "default": "glm-4-plus",
          "description": "GLM model ID to use"
        },
        "superdesign.glmMaxTokens": {
          "type": "number",
          "default": 8192,
          "description": "Maximum tokens for GLM model responses",
          "scope": "application"
        },
        "superdesign.glmTemperature": {
          "type": "number",
          "default": 0.7,
          "description": "Temperature for GLM model responses (0.0-2.0)",
          "scope": "application"
        },
        "superdesign.zhipuApiKey": {
          "type": "string",
          "description": "Zhipu AI API key for advanced Chinese language models",
          "scope": "application"
        },
        "superdesign.zhipuModelId": {
          "type": "string",
          "enum": [
            "glm-4-plus",
            "glm-4-0520",
            "glm-4-long",
            "glm-4v-plus",
            "glm-4-air",
            "glm-4-airx",
            "glm-4-flash"
          ],
          "default": "glm-4-plus",
          "description": "Zhipu AI model ID to use",
          "scope": "application"
        },
        "superdesign.doubaoEndpointId": {
          "type": "string",
          "description": "Doubao custom endpoint ID (optional)",
          "scope": "application"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "node esbuild.js --production",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test",
    "test:llm": "tsc --project tsconfig.test.json && node dist-test/test/llm-service.test.js",
    "test:core": "tsc --project tsconfig.test.json && node dist-test/test/core-components.test.js",
    "test:read": "tsc --project tsconfig.test.json && node dist-test/test/read-tool.test.js",
    "test:write-edit": "tsc --project tsconfig.test.json && node dist-test/test/write-edit-tools.test.js",
    "test:ls-grep-glob": "tsc --project tsconfig.test.json && node dist-test/test/ls-grep-glob-tools.test.js",
    "test:agent": "tsc --project tsconfig.test.json && node dist-test/test/llm-service.test.js && node dist-test/test/core-components.test.js",
    "test:tools": "tsc --project tsconfig.test.json && node dist-test/test/read-tool.test.js && node dist-test/test/write-edit-tools.test.js && node dist-test/test/ls-grep-glob-tools.test.js"
  },
  "devDependencies": {
    "@types/mime-types": "^3.0.1",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.90.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "esbuild": "^0.25.3",
    "eslint": "^9.25.1",
    "npm-run-all": "^4.1.5",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "@ai-sdk/anthropic": "^1.2.12",
    "@ai-sdk/google": "^1.2.19",
    "@ai-sdk/openai": "^1.3.22",
    "@anthropic-ai/sdk": "^0.63.0",
    "@openrouter/ai-sdk-provider": "^0.7.2",
    "@playwright/test": "^1.55.0",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "@vscode/codicons": "^0.0.36",
    "ai": "^4.3.16",
    "axios": "^1.12.2",
    "body-parser": "^2.2.0",
    "cors": "^2.8.5",
    "execa": "^9.6.0",
    "express": "^5.1.0",
    "glob": "^11.0.3",
    "highlight.js": "^11.11.1",
    "lucide-react": "^0.522.0",
    "micromatch": "^4.0.8",
    "mime-types": "^3.0.1",
    "openai": "^5.21.0",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-markdown": "^10.1.0",
    "react-zoom-pan-pinch": "^3.7.0",
    "rehype-highlight": "^7.0.2",
    "remark-gfm": "^4.0.1",
    "zod": "^3.25.67"
  }
}
